Problem Statement
You are given an unsorted array of length n and must sort it using merge sort while also printing the amount of merges that occur throughout the sorting process.


import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
   // public static void main (String[] args) {
                      // Your code here
                   //   public static int[] mergeTwoSortedArray(int[] a, int[] b) {
          public static void main (String[] args) {
         Scanner inputTaker = new Scanner(System.in);
            int n = inputTaker.nextInt();
            int[] arr = new int[n];
            for(int i = 0;i<n;i++){
                arr[i] = inputTaker.nextInt();          
                 }

                 int numberofMerges = sort(arr,0,n-1);
                 for(int i = 0;i<n;i++){
                     System.out.print(arr[i] + " ");

                 } 
                 System.out.println("");
                 System.out.println(numberofMerges);         
    }

    public static int sort (int arr[],int l,int h){

        if(l<h){
            int m = l +(h-l)/2;
            int mergesInLeft = sort(arr, l, m);
            int mergesInRight = sort(arr, m+1,h);
            merge(arr, l, m, h);
            return mergesInLeft + mergesInRight + 1;
        }
        return 0;
    }
    public static void merge(int[]arr, int l,int m,int h){
        int n1 = m - l + 1;
        int n2 = h - m;

        int[] left = new int[n1];
        int[] right = new int[n2];

        for(int i = 0; i < n1;i++){
            left[i] = arr[l+i];
        }
        for(int i = 0; i < n2;i++){
            right[i] = arr[m+1+i];

    }
    int i = 0;
    int j = 0;
    int k = l;

    while( i < n1 && j < n2){

        if(left[i] <= right[j]){
            arr[k] = left[i];
            i++;
        }else{
            arr[k] = right[j];
            j++;
        }
        k++;

    }

    while(i<n1){
        arr[k] = left[i];
        k++;
        i++;
    }
     while(i<n2){
        arr[k] = right[j];
        k++;
        j++;
     }
    }
}