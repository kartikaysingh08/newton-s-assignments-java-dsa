Problem Statement
Given an integer Q representing the number of queries. Each query contains an integer t representing the time (in milliseconds) at which a request was made to server. For each query, print the number of requests made in the last 3000 milliseconds. Specifically, print the number of requests that have happened in the range [t - 3000, t].

import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
                      // Your code here
                           Scanner sc = new Scanner(System.in);
                      int n = sc.nextInt();
                   
                      int []arr=new int[n];
                      for(int i =0;i<n;i++){
                      arr[i]=sc.nextInt();
                      }
                      near(arr);
    }
                      public static void near( int[]arr)
                       {
                          Queue<Integer> q=new LinkedList<>();
                          for(int i =0;i<arr.length;i++){ 
                              int min=arr[i]-3000;
                              q.add(arr[i]);
                              while(q.peek()<min)
                              {
                                  q.poll();
                              }
                              System.out.print(q.size()+" ");
    }
}
    }